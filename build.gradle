plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
    id 'maven-publish'
    id 'jacoco'
    id 'org.embulk.embulk-plugins' version '0.7.0'
    id 'com.diffplug.spotless' version '6.11.0'
    id 'signing'
}

group = "io.github.guchey.embulk.input.ahrefs"
version = "0.1.1"
description = "embulk-input-ahrefs is the gem preparing Embulk input plugins"
def embulkVersion = "0.10.43"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly("org.embulk:embulk-api:${embulkVersion}")
    compileOnly("org.embulk:embulk-spi:${embulkVersion}")

    implementation("org.embulk:embulk-util-config:0.3.4") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jdk8'
        exclude group: 'javax.validation', module: 'validation-api'
    }
    implementation("org.embulk:embulk-base-restclient:0.10.1") {
        exclude group: 'org.embulk', module: 'embulk-core'
    }

    implementation("org.embulk:embulk-util-retryhelper-jaxrs:0.9.0")

    implementation("com.squareup.okhttp3:okhttp:4.11.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation("org.embulk:embulk-api:${embulkVersion}")
    testImplementation("org.embulk:embulk-spi:${embulkVersion}")
    testImplementation("org.embulk:embulk-junit4:${embulkVersion}")

    testImplementation("org.embulk:embulk-deps:${embulkVersion}")

    testImplementation("io.mockk:mockk:1.13.8")
}

embulkPlugin {
    mainClass.set("io.github.guchey.embulk.input.ahrefs.AhrefsInputPlugin")
    category.set("input")
    type.set("ahrefs")
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name

            from components.java

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging = "jar"

                name = project.name
                description = project.description
                url = "https://github.com/guchey/embulk-input-ahrefs"

                licenses {
                    // Maven Central requires explicit license specification.
                    // This is an example of the MIT License.
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "MIT License"
                        url = "http://www.opensource.org/licenses/mit-license.php"
                    }
                }

                developers {
                    developer {
                        name = "guchey"
                        email = "taguchi8shingen@gmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/guchey/embulk-input-ahrefs.git"
                    developerConnection = "scm:git:git@github.com/guchey/embulk-input-ahrefs.git"
                    url = "https://github.com/guchey/embulk-input-ahrefs"
                }
            }
        }
    }
    repositories {
        maven {
            name = "mavenCentral"
            url = project.version.endsWith('-SNAPSHOT') ?
                    'https://s01.oss.sonatype.org/content/repositories/snapshots' :
                    'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'

            // This setting assumes that "~/.gradle/gradle.properties" has "ossrhUsername" and "ossrhPassword".
            // Please put your Sonatype OSSRH username and password in "~/.gradle/gradle.properties".
            // https://central.sonatype.org/publish/publish-gradle/#credentials
            credentials {
                username = project.hasProperty('ossrhUsername') ? project.ossrhUsername : ''
                password = project.hasProperty('ossrhPassword') ? project.ossrhPassword : ''
            }
        }
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat().aosp()
    }
}

tasks.test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(8)
}

// Maven Central requires PGP signature.
// https://central.sonatype.org/publish/requirements/gpg/
// https://central.sonatype.org/publish/publish-gradle/#credentials
signing {
    useGpgCmd()
    sign(publishing.publications["maven"])
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.register('generateEmbulkProperties') {
    doLast {
        def embulkDir = file("${System.getProperty('user.home')}/.embulk")
        embulkDir.mkdirs()
        def propFile = file("${System.getProperty('user.home')}/.embulk/embulk.properties")
        propFile.append("m2_repo=${System.getProperty('user.home')}/.m2/repository\n")
        propFile.append("plugins.input.ahrefs=maven:${project.group}:ahrefs:${project.version}\n")
    }
}

tasks.withType(Sign).configureEach {
    onlyIf { !System.getenv().containsKey('CI') }
}

gem {
    authors = ["guchey"]
    email = ["taguchi8shingen@gmail.com"]
    // "description" of the Ruby Gem would come from "description" of the Gradle project.
    summary = project.description
    homepage = "https://github.com/guchey/embulk-input-ahrefs"
    licenses = ["MIT"]  // See: https://guides.rubygems.org/specification-reference/#license=

    from("LICENSE")  // If you want to include LICENSE file(s) in the Ruby Gem package.
}

gemPush {
    host = "https://rubygems.org"
}